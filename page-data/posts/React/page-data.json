{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/React",
    "result": {"pageContext":{"currentCategory":"React","categories":["All","onboarding","JS","React","Git","HTMLCSS","VSCode","알고리즘","그리디","TS","최단경로","다이나믹프로그래밍","블로그","featured"],"edges":[{"node":{"id":"4bcf50eb-c6a0-5292-a5d1-e1c9c7caac2d","excerpt":"노마드코더 - GraphQL로 영화 웹 앱 만들기 기타 명령어 React 노마드코더 - GraphQL로 영화 웹 앱 만들기 기타","fields":{"slug":"/react-study/apollo-grapql/"},"frontmatter":{"categories":"React","title":"[React] Apollo & GraphQL","date":"February 13, 2022"}},"next":{"fields":{"slug":"/react-study/nwitter-colne-3/"}},"previous":{"fields":{"slug":"/nomadjs-chrome/paintJS/"}}},{"node":{"id":"949ca130-6fe8-5581-838c-c57f7e622236","excerpt":"노마드코더 - Twitter Clone version 9 이전 Post 이어서 작성 Firestore Database B. Firestore Database 사용 API(추가)\r\n,,,,,,,,,, Real time onSnapshot은 데이터베이스에 변동이 생기면 알림을 받아서 Realtime에 사용 공식문서 참조= 예시 Delete 공식문서 참조- 예시 Uodate 공식문서 참조- 예시 C. Firebase Storage 사용 API\r\n,,,, API FileReader 예시 typescript로 작성시 Error onloadend - EventTarget | null’ 형식에 ‘result’ 속성이 없습니다. Error 처리 - 여러가지 방법이 있었으나 간단하게 any형으로 처리하였다. Storage Upload  - 랜덤으로 uid 생성 예시 Delete File 예시 React 노마드코더 - Twitter Clone 이전 Post 이어서 작성 Firestore Databa…","fields":{"slug":"/react-study/nwitter-colne-3/"},"frontmatter":{"categories":"React","title":"[React] Nwitter Clone#3","date":"February 13, 2022"}},"next":{"fields":{"slug":"/react-study/nwitter-colne-2/"}},"previous":{"fields":{"slug":"/react-study/apollo-grapql/"}}},{"node":{"id":"eda83b69-056e-5228-b55b-a3a459d5056b","excerpt":"노마드코더 - Twitter Clone version 9 A. Authentication(Login) Using API @firebase/auth ,, ,,,,\r\n B. Firestore Database Firestore는 NoSQL Database 특성 Collection이라고 불리는 것을 갖고 있다.(폴더와 같다고 보면 됨) Document가 있다(문서라고 보면 됨) 하나의 database는 collection들을 갖고 있고, 하나의 collection은 Document들을 가지고 있다. 사용 API @firebase/firestore ,  collection & document 생성 예시 Data Read 공식문서 참조- 예시 React 노마드코더 - Twitter Clone A. Authentication(Login) B. Firestore Database","fields":{"slug":"/react-study/nwitter-colne-2/"},"frontmatter":{"categories":"React","title":"[React] Nwitter Clone#2","date":"February 12, 2022"}},"next":{"fields":{"slug":"/react-study/nwitter-colne-1/"}},"previous":{"fields":{"slug":"/react-study/nwitter-colne-3/"}}},{"node":{"id":"e809d878-1325-5c76-a7d5-724a87d49a4e","excerpt":"노마드코더 - Twitter Clone A. ReactJs Setup CRA 리액트 프로젝트 생성 강의는 Typescript 사용하지 않지만 Typescript 공부를 위해 Typescript로 진행 한다. 원격 저장소 연결 & Initial commit 명령어로 안하고 Github Desktop으로 진행 B. Firebase Setup Firebase 프로젝트 만들기 app 생성 Firebase SDK 추가 npm 설치 firebase.js 추가 -> fbase.js (절대경로 import로 설정했더니 firebase랑 충돌나서 파일명 변경) C. .env 파일 생성 및 사용 보안을 해결 해주는건 아니고 Github에서 코드만 안보이게 하기 위해 사용. 를 사용한 경우 환경 변수 써야 한다면 변수명은 REACT_APP으로 시작하고 그 뒤로 이름을 붙여줘야 한다. 예시 .env firebase.ts D. Firebase Authentication(v9) Import firebase…","fields":{"slug":"/react-study/nwitter-colne-1/"},"frontmatter":{"categories":"React","title":"[React] Nwitter Clone#1","date":"February 11, 2022"}},"next":{"fields":{"slug":"/git-study/git-publishing/"}},"previous":{"fields":{"slug":"/react-study/nwitter-colne-2/"}}},{"node":{"id":"5d8704f3-1a88-5907-912a-93c7134340f1","excerpt":"by MDN 구조 분해 할당 구조 분해 할당 구문은 배열이나 객체의 속성을 해제하여 그 값을 개별 변수에 담을 수 있게 하는 Javascript 표현식 새로운 변수 이름으로 할당하기 같은 구조를 가진 다른 데이터 가져올 때 변수명이 겹쳐서 새로운 변수명 할당이 필요 했다. 예시 by MDN 새로운 변수 이름으로 할당하기","fields":{"slug":"/react-study/my-study-1/"},"frontmatter":{"categories":"React","title":"[JS] 구조분해할당시 변수 이름 변경","date":"February 09, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-6/"}},"previous":{"fields":{"slug":"/git-study/git-publishing/"}}},{"node":{"id":"cdfa6853-85f9-5f4e-81a9-6a1d982b0b0b","excerpt":"노마드코더 - React JS 마스터클래스 1. Framer Motion Animation Section에서  library 사용은 기록 보다 document를 보는 것이 좋은듯 하다. Slider는 혹시 몰라 아래 코드 첨부 Section8. NOMFLIX CLONE svg태그에서  속성은 색상 변경 svg > path 태그에서 는 선 색상 는 선 두께  리액트 쿼리 이용해 데이터 가져오기 쿼리 클라이언트 생성 TMDB 회원가입 API KEY 발급 이후 내용은 git hub로 React 1. Framer Motion Section8. NOMFLIX CLONE 리액트 쿼리 이용해 데이터 가져오기","fields":{"slug":"/react-study/react-master-6/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#6","date":"February 08, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-5/"}},"previous":{"fields":{"slug":"/react-study/my-study-1/"}}},{"node":{"id":"5b5951c5-de4a-583f-b9bc-f5229db43daf","excerpt":"노마드코더 - React JS 마스터클래스 1. react-beautiful-dnd DRAG & DROP 구현 쉽게 해주는 lib Draggable에서 key와 draggableId는 같은 값이어야 한다. Droppable, Board, DragDropContext등 부모 State가 바뀌면 자식들은 모두 다시 렌더링 된다. React의 기본 특성 이로 인해 Draggable할 때 하나의 요소만 움직여도 다른 자식들도 모두 렌더링 된다. 이를 방지하기 위해 memo를 사용\r\n는 prop이 바뀌지 않는다면 컴포넌트 렌더링을 막아준다. 예시 <br/ > styled-component props 받는 예시(typescript) 2. Reference React코드를 이용해 HTML 요소를 지정하고, 가져올 수 있는 방법 리액트 실전형 Hooks 10개 공부 중 useClick Hook 배울 때 배웠다.\r\n React 1. react-beautiful-dnd 2. Reference","fields":{"slug":"/react-study/react-master-5/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#5","date":"February 05, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-4/"}},"previous":{"fields":{"slug":"/react-study/react-master-6/"}}},{"node":{"id":"20577b9d-9a80-5f9d-9a67-b2f5de908660","excerpt":"노마드코더 - React JS 마스터클래스 1. Recoil selector 는 state자체를 바꾸지 않고 원하는 방식으로 atom의 output을 변형시키는 도구 예시 하나의 atom으로 selector를 이용하여 category별로 데이터를 보여주는 예시 atom.ts ToDoList.tsx selector get, set 위에서 get은 다뤘으나 set은 다루지 않아 추가적인 예시 이다. 이 예시는  atom으로 selector의 get을 이용해 를 표현하고 set을 이용해 를 로 나타내는 예시이다. React 1. Recoil selector selector get, set","fields":{"slug":"/react-study/react-master-4/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#4","date":"February 02, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-3/"}},"previous":{"fields":{"slug":"/react-study/react-master-5/"}}},{"node":{"id":"e304f760-7ee0-5390-9261-669198b251ec","excerpt":"노마드코더 - React JS 마스터클래스 1. Section 5. State Management - Recoil global state - 어플리케이션 전체에서 공유되는 state (ex. user login) Atom은 상태(state)의 일부를 나타낸다. Atoms는 어떤 컴포넌트에서나 읽고 쓸 수 있다. Redux 와 Recoil 차이점 공부해두면 좋을 듯. 컴포넌트가 atom의 값을 관찰 하기 시작할 때 atom이 변경되면 컴포넌트도 변경된 값으로 다시 리렌더링 된다. 예시같은건 문서 확인 Recoil ApexChart 이용 React Hook Form useForm 호출하여 register와 handleSubmit 을 받아 register 함수를 form에 있는 모든 input에서 호출 validation 설정은 예를 들어 required:true or required:“error message” 와 같이 작성\r\n자세한 내용은 github source 또는  확인 Rea…","fields":{"slug":"/react-study/react-master-3/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#3","date":"February 01, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-2/"}},"previous":{"fields":{"slug":"/react-study/react-master-4/"}}},{"node":{"id":"ff594cef-20ab-5121-87bd-dcc04025618f","excerpt":"노마드코더 - React JS 마스터클래스 1. Section 3. Type Script 기초는 배웠으므로 필요한거만 기록 Optional Props Props를 선택적으로 주는 방법 및 Default 값 주는 예시를 살펴 본다. interface에서 props명 뒤에 ? 붙이면 option props가 된다. optional props 값을 Style component에 전달할 경우 필수 값인데 이때는 default 값 지정 한다. 예시 받아온 Data Type 지정 받아온 데이터안에 object 즉 배열 같은게 있으면 그안에 데이터보고 지정 해줘야 되는게 단점. Object.keys(data).join() 해서 key string으로 만든다. Object.values(data).map(v=> typeof v).join()으로 type string으로 만든다. vs code에서 편집! react-query React 애플리케이션에서 서버 state를 fetching, cachin…","fields":{"slug":"/react-study/react-master-2/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#1","date":"January 31, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-1/"}},"previous":{"fields":{"slug":"/react-study/react-master-3/"}}},{"node":{"id":"8d6d8897-12fc-5501-8c6d-f92b164925e8","excerpt":"노마드코더 - React JS 마스터클래스 1. 강의 시작 React JS 기초 강의를 듣고 Twitter Clone Coding 하려다가 어쩌다가 HTML/CSS/JS 기초 강의 다 듣고\r\n오느라 몇일 걸려서 이제 본격 React JS 마스터클래스를 시작하게 됐다. 이 강의는 Section별로 각기 다른 요소를 집중적으로 배우며 섹션을 진행할 때마다 복습 및 새로운것을 배운다\r\n그리고 마지막에는 배운것을 총 동원한 작은 프로젝트를 만들게 된다. 2. Section 2. Styled Components #2-1 ~ 2.2 Adapting & Extending styled components 설치 styled components를 import해서 사용 기본적으로 태그명 뒤에 “ 기호를 사용하여 그 사이에 기본 css문법과 똑같이 사용한다. 컴포넌트로서 Props로 색상 같은걸 동적으로 전달 가능 확장 가능 예시 #2-3 ‘as’ and Attrs 같은 스타일을 가진 다른 태그를 만들…","fields":{"slug":"/react-study/react-master-1/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#1","date":"January 30, 2022"}},"next":{"fields":{"slug":"/react-study/react-hooks-2/"}},"previous":{"fields":{"slug":"/react-study/react-master-2/"}}},{"node":{"id":"cb48336a-8d95-5dbc-a7de-bdbb67d0f29b","excerpt":"노마드코더 - 실전형 리액트 Hooks 10개 노트 #2.1 useTitle 홈페이지의 title을 update해주는 hook #2.2 useClick element를 클릭 하는 기능을 넣을 때 사용하는 hook\r\nreference - component의 어떤 부분을 선택할 수 있는 방법\r\n document.getElementById 같은 기능 사용 예시 useEffect를 return 받은 함수는 componentWillUnmount 때 호출 #2.3 useConfirm & usePreventLeave useConfirm  사용자가 무언가를 하기 전에 확인해야 할 때 사용하는 Hook usePreventLeave 웹 사이트 같은데서 작업이 완료되지 않았는데 window창을 닫으려 할 때 호출되는 Hook  event는 window가 닫히기 전에 function이 실행되게 해준다. #2.4 useBeforeLeave 기본적으로 탭을 닫으려고 페이지를 벗어나려 할 때 실행되는 Hoo…","fields":{"slug":"/react-study/react-hooks-2/"},"frontmatter":{"categories":"React","title":"[React] 리액트 Hooks#2","date":"January 30, 2022"}},"next":{"fields":{"slug":"/react-study/react-hooks/"}},"previous":{"fields":{"slug":"/react-study/react-master-1/"}}},{"node":{"id":"2a7ae4d9-bc22-5a39-920c-8b0f8d541cb5","excerpt":"노마드코더 - 실전형 리액트 Hooks 10개 React Hooks Intro functional component에서 state을 가질 수 있게 한다. 함수형 프로그래밍 스타일 ! 기존 리액트 스타일 예시 리액트 훅 사용 예시 참조-리액트 훅 Docs 처음 배울 때 훅 사용하지 않은걸 배웠고 나중에 배운건 훅 사용한거였는데\r\n그냥 뭐 더 쉽게 바뀐거지 하고 사용만 했지 왜 이렇게 바뀐지는 생각안해봤는데\r\n바뀐 배경을 들으니까 리액트가 더 재밌어지는 중이다. 노트 #1. useState #1.0 useState (위의 상단 내용) #1.1 ~ 1.2 useInput 기본적인 Input 업데이트 React Doc에 따르면 props 객체를 전달하는 Spread 연산자를 사용하여 props 속성을 확산하여 JSX에서 전달할 수 있다고 나와있다. #1.3 useTabs 공부한 소스는 깃허브 업로드 예정 #2. useEffect #2.0 useEffect , , 의 역할을 한다. Reac…","fields":{"slug":"/react-study/react-hooks/"},"frontmatter":{"categories":"React","title":"[React] 리액트 Hooks#1","date":"January 28, 2022"}},"next":{"fields":{"slug":"/html-css/kokoat-clone-3/"}},"previous":{"fields":{"slug":"/react-study/react-hooks-2/"}}},{"node":{"id":"7972740f-f4d8-506b-9d21-9de0a10d54f1","excerpt":"노마드코더 - ReactJS 영화웹 만들기 CRA로 리액트 프로젝트 생성 노트 1. useEffect 이용한 create, destroy Component가 생성될 때 코드 실행(create) 및 파괴될 때 코드 실행(destroy) 2. API 사용법 ajax & coin API 사용 문제점 로 가져온 데이터가 6000 몇개 쯤? 되는데\r\n데이터를 천개 정도까지 잘라서 입력했을 때 USD-> 선택된 Coin 수량 변경시 잘되는데 2천개정도부터\r\n버벅이는 현상이 나타남. 정확한 원인은 아직 모르겠으나 숫자를 입력했을 때 onchange 이벤트가 계속 발생하여\r\n그 속도가 6천개의 데이터를 그려주는 속도보다 빨라서 버벅이는걸로 예상이됨.\r\n소스참조 예상 해결 방안 페이징을 사용하여 데이터를 나눠서 렌더링 하는 방법. 스크롤위치에 따라 데이터를 나눠서 렌더링 하는 방법. input 입력시 onChange발생하여 setMoney를 실행할 때 setTimeout을 줘서 렌더링 시간에 격차…","fields":{"slug":"/react-study/nomad-movie-2/"},"frontmatter":{"categories":"React","title":"[React] 영화 웹 서비스#2","date":"January 24, 2022"}},"next":{"fields":{"slug":"/react-study/nomad-movie-1/"}},"previous":{"fields":{"slug":"/html-css/kokoat-clone-1/"}}},{"node":{"id":"310a6420-637c-5bb6-81a6-a3d01d1b0930","excerpt":"노마드코더 - ReactJS 영화웹 만들기 0. 기초강의를 다시 듣는 이유? 기초 강의를 들었음에도 다시듣는 이유는 개발을 잘하는사람은 어떻게 개발하나 보기위해 ??\r\n그냥 화면만 나오게하고 기능만 구현했던 나는 원티드 프리온보딩 코스를 지원하고 떨어졌을 때\r\n왜 떨어졌을지 생각 해봤다. 과제는 리액트를 사용하여 원티드 상단과 똑같이 만들라 한것.\r\n만들 당시만해도 잘만들었다 생각했는데.. 떨어지고 다른 사람들의 소스코드를 보니\r\n난 리액트환경안에서 리액트보다 순수 자바스크립트 html 코딩을 하고 있었던것…\r\n그리하여 프론트엔드의 강자 노마드코더 강의로 기초를 다지고자 했는데\r\n강의 30분정도만에 나의 선택을 칭찬한다. 바닐라Js vs ReactJs 차이 바닐라Js는 HTML생성 후 Javascript로 가져와서 HTML을 수정 React JS에서는 Javascript로 시작하여 수정의 필요가있는 HTML을 업데이트 1. 노마드코더 리액트 강의 첫소감 현재 state를 바탕으로 …","fields":{"slug":"/react-study/nomad-movie-1/"},"frontmatter":{"categories":"React","title":"[React] 영화크롬앱#1","date":"January 23, 2022"}},"next":{"fields":{"slug":"/nomadjs-chrome/"}},"previous":{"fields":{"slug":"/react-study/nomad-movie-2/"}}},{"node":{"id":"75a8b637-b4ee-5f07-8ef4-d79f631309ed","excerpt":"A. React - Life Cycle  1. componentDidMount() 컴포넌트가 만들어지고 첫 렌더링 마친 후 호출되는 함수 setTimeout, setInterval 및 AJAX 처리. B. classnames 서로 다른 효과를 갖고 있는 css를 하나의 컴포넌트에 적용하는데 사용. 1. 설치 2. 사용법 App.css의 스타일을 받아와서 box와 blue 값은 isBlue 값에 따라 보이거나 안보이거나 A. React - Life Cycle 1. componentDidMount() B. classnames 1. 설치 2. 사용법","fields":{"slug":"/react-study/react-classnames-lib/"},"frontmatter":{"categories":"React","title":"[React] React Basic","date":"January 19, 2022"}},"next":{"fields":{"slug":"/algorithm-study/greedy/law-of-Large-Number/"}},"previous":{"fields":{"slug":"/vscode/vscode-study-shortcut/"}}},{"node":{"id":"680f68dc-d73d-53e8-8f1c-44847679519b","excerpt":"👋 SVG Scalable Vector Graphics - 벡터와 같은 방식의 2차원 그래픽용 XML 형식 이미지가 코드로 표현 된것 리액트에서 svg 사용법 [위코드 X 원티드] 프론트앤드 프리온보딩 선발 과제 진행하며 svg 활용 방법 찾다가.. svg 파일 준비(경로 : /assets/icon/search-icon.svg) svg 컴포넌트화 svg 색, 크기 변경 svg에서 속성 값 width, height, fill등의 바꾸고자 하는 요소 current로 변경 컴포넌트 props로 current부분의 값 전달 👋 SVG 리액트에서 svg 사용법 svg 색, 크기 변경","fields":{"slug":"/react-study/"},"frontmatter":{"categories":"React","title":"[React] React에서 SVG 사용","date":"January 13, 2022"}},"next":{"fields":{"slug":"/algorithm-study/exact-ranking/"}},"previous":{"fields":{"slug":"/ts-study/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}