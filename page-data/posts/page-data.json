{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts",
    "result": {"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"cdfa6853-85f9-5f4e-81a9-6a1d982b0b0b","excerpt":"노마드코더 - React JS 마스터클래스 1. Framer Motion Animation Section에서  library 사용은 기록 보다 document를 보는 것이 좋은듯 하다. Slider는 혹시 몰라 아래 코드 첨부 Section8. NOMFLIX CLONE svg태그에서  속성은 색상 변경 svg > path 태그에서 는 선 색상 는 선 두께  리액트 쿼리 이용해 데이터 가져오기 쿼리 클라이언트 생성 TMDB 회원가입 API KEY 발급 이후 내용은 git hub로 React 1. Framer Motion Section8. NOMFLIX CLONE 리액트 쿼리 이용해 데이터 가져오기","fields":{"slug":"/react-study/react-master-6/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#6","date":"February 08, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-5/"}},"previous":null},{"node":{"id":"5b5951c5-de4a-583f-b9bc-f5229db43daf","excerpt":"노마드코더 - React JS 마스터클래스 1. react-beautiful-dnd DRAG & DROP 구현 쉽게 해주는 lib Draggable에서 key와 draggableId는 같은 값이어야 한다. Droppable, Board, DragDropContext등 부모 State가 바뀌면 자식들은 모두 다시 렌더링 된다. React의 기본 특성 이로 인해 Draggable할 때 하나의 요소만 움직여도 다른 자식들도 모두 렌더링 된다. 이를 방지하기 위해 memo를 사용\r\n는 prop이 바뀌지 않는다면 컴포넌트 렌더링을 막아준다. 예시 <br/ > styled-component props 받는 예시(typescript) 2. Reference React코드를 이용해 HTML 요소를 지정하고, 가져올 수 있는 방법 리액트 실전형 Hooks 10개 공부 중 useClick Hook 배울 때 배웠다.\r\n React 1. react-beautiful-dnd 2. Reference","fields":{"slug":"/react-study/react-master-5/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#5","date":"February 05, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-4/"}},"previous":{"fields":{"slug":"/react-study/react-master-6/"}}},{"node":{"id":"20577b9d-9a80-5f9d-9a67-b2f5de908660","excerpt":"노마드코더 - React JS 마스터클래스 1. Recoil selector 는 state자체를 바꾸지 않고 원하는 방식으로 atom의 output을 변형시키는 도구 예시 하나의 atom으로 selector를 이용하여 category별로 데이터를 보여주는 예시 atom.ts ToDoList.tsx selector get, set 위에서 get은 다뤘으나 set은 다루지 않아 추가적인 예시 이다. 이 예시는  atom으로 selector의 get을 이용해 를 표현하고 set을 이용해 를 로 나타내는 예시이다. React 1. Recoil selector selector get, set","fields":{"slug":"/react-study/react-master-4/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#4","date":"February 02, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-3/"}},"previous":{"fields":{"slug":"/react-study/react-master-5/"}}},{"node":{"id":"e304f760-7ee0-5390-9261-669198b251ec","excerpt":"노마드코더 - React JS 마스터클래스 1. Section 5. State Management - Recoil global state - 어플리케이션 전체에서 공유되는 state (ex. user login) Atom은 상태(state)의 일부를 나타낸다. Atoms는 어떤 컴포넌트에서나 읽고 쓸 수 있다. Redux 와 Recoil 차이점 공부해두면 좋을 듯. 컴포넌트가 atom의 값을 관찰 하기 시작할 때 atom이 변경되면 컴포넌트도 변경된 값으로 다시 리렌더링 된다. 예시같은건 문서 확인 Recoil ApexChart 이용 React Hook Form useForm 호출하여 register와 handleSubmit 을 받아 register 함수를 form에 있는 모든 input에서 호출 validation 설정은 예를 들어 required:true or required:“error message” 와 같이 작성\r\n자세한 내용은 github source 또는  확인 Rea…","fields":{"slug":"/react-study/react-master-3/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#3","date":"February 01, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-2/"}},"previous":{"fields":{"slug":"/react-study/react-master-4/"}}},{"node":{"id":"ff594cef-20ab-5121-87bd-dcc04025618f","excerpt":"노마드코더 - React JS 마스터클래스 1. Section 3. Type Script 기초는 배웠으므로 필요한거만 기록 Optional Props Props를 선택적으로 주는 방법 및 Default 값 주는 예시를 살펴 본다. interface에서 props명 뒤에 ? 붙이면 option props가 된다. optional props 값을 Style component에 전달할 경우 필수 값인데 이때는 default 값 지정 한다. 예시 받아온 Data Type 지정 받아온 데이터안에 object 즉 배열 같은게 있으면 그안에 데이터보고 지정 해줘야 되는게 단점. Object.keys(data).join() 해서 key string으로 만든다. Object.values(data).map(v=> typeof v).join()으로 type string으로 만든다. vs code에서 편집! react-query React 애플리케이션에서 서버 state를 fetching, cachin…","fields":{"slug":"/react-study/react-master-2/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#1","date":"January 31, 2022"}},"next":{"fields":{"slug":"/react-study/react-master-1/"}},"previous":{"fields":{"slug":"/react-study/react-master-3/"}}},{"node":{"id":"8d6d8897-12fc-5501-8c6d-f92b164925e8","excerpt":"노마드코더 - React JS 마스터클래스 1. 강의 시작 React JS 기초 강의를 듣고 Twitter Clone Coding 하려다가 어쩌다가 HTML/CSS/JS 기초 강의 다 듣고\r\n오느라 몇일 걸려서 이제 본격 React JS 마스터클래스를 시작하게 됐다. 이 강의는 Section별로 각기 다른 요소를 집중적으로 배우며 섹션을 진행할 때마다 복습 및 새로운것을 배운다\r\n그리고 마지막에는 배운것을 총 동원한 작은 프로젝트를 만들게 된다. 2. Section 2. Styled Components #2-1 ~ 2.2 Adapting & Extending styled components 설치 styled components를 import해서 사용 기본적으로 태그명 뒤에 “ 기호를 사용하여 그 사이에 기본 css문법과 똑같이 사용한다. 컴포넌트로서 Props로 색상 같은걸 동적으로 전달 가능 확장 가능 예시 #2-3 ‘as’ and Attrs 같은 스타일을 가진 다른 태그를 만들…","fields":{"slug":"/react-study/react-master-1/"},"frontmatter":{"categories":"React","title":"[React] React JS 마스터클래스#1","date":"January 30, 2022"}},"next":{"fields":{"slug":"/react-study/react-hooks-2/"}},"previous":{"fields":{"slug":"/react-study/react-master-2/"}}},{"node":{"id":"cb48336a-8d95-5dbc-a7de-bdbb67d0f29b","excerpt":"노마드코더 - 실전형 리액트 Hooks 10개 노트 #2.1 useTitle 홈페이지의 title을 update해주는 hook #2.2 useClick element를 클릭 하는 기능을 넣을 때 사용하는 hook\r\nreference - component의 어떤 부분을 선택할 수 있는 방법\r\n document.getElementById 같은 기능 사용 예시 useEffect를 return 받은 함수는 componentWillUnmount 때 호출 #2.3 useConfirm & usePreventLeave useConfirm  사용자가 무언가를 하기 전에 확인해야 할 때 사용하는 Hook usePreventLeave 웹 사이트 같은데서 작업이 완료되지 않았는데 window창을 닫으려 할 때 호출되는 Hook  event는 window가 닫히기 전에 function이 실행되게 해준다. #2.4 useBeforeLeave 기본적으로 탭을 닫으려고 페이지를 벗어나려 할 때 실행되는 Hoo…","fields":{"slug":"/react-study/react-hooks-2/"},"frontmatter":{"categories":"React","title":"[React] 리액트 Hooks#2","date":"January 30, 2022"}},"next":{"fields":{"slug":"/react-study/react-hooks/"}},"previous":{"fields":{"slug":"/react-study/react-master-1/"}}},{"node":{"id":"2a7ae4d9-bc22-5a39-920c-8b0f8d541cb5","excerpt":"노마드코더 - 실전형 리액트 Hooks 10개 React Hooks Intro functional component에서 state을 가질 수 있게 한다. 함수형 프로그래밍 스타일 ! 기존 리액트 스타일 예시 리액트 훅 사용 예시 참조-리액트 훅 Docs 처음 배울 때 훅 사용하지 않은걸 배웠고 나중에 배운건 훅 사용한거였는데\r\n그냥 뭐 더 쉽게 바뀐거지 하고 사용만 했지 왜 이렇게 바뀐지는 생각안해봤는데\r\n바뀐 배경을 들으니까 리액트가 더 재밌어지는 중이다. 노트 #1. useState #1.0 useState (위의 상단 내용) #1.1 ~ 1.2 useInput 기본적인 Input 업데이트 React Doc에 따르면 props 객체를 전달하는 Spread 연산자를 사용하여 props 속성을 확산하여 JSX에서 전달할 수 있다고 나와있다. #1.3 useTabs 공부한 소스는 깃허브 업로드 예정 #2. useEffect #2.0 useEffect , , 의 역할을 한다. Reac…","fields":{"slug":"/react-study/react-hooks/"},"frontmatter":{"categories":"React","title":"[React] 리액트 Hooks#1","date":"January 28, 2022"}},"next":{"fields":{"slug":"/html-css/kokoat-clone-3/"}},"previous":{"fields":{"slug":"/react-study/react-hooks-2/"}}},{"node":{"id":"1e6eedb4-a571-573a-84f7-63ff7a3bb8c8","excerpt":"노마드코더 - 코코아톡 클론코딩 노트 1. 강의 #6.27 ~ #6.40 tip. 이 인 경우 layer가 다르기 때문에 navbar 같은거 만들때 fixed로 인해 그 이후 요소랑 겹침 현상 일어 날 수 있다. 해결 방안 body쪽에  주는게 제일 무난한 방법이라 생각. animation - forwards 애니메이션에 forwards 속성을 넣으면 애니메이션이 끝나도 변한 값 유지 은 임시방편, 정석은 자바스크립트로 처리해야 한다. 예시 will-change 브라우저에게 어떤 속성이 변할지 알려줄 때 사용 알려줌으로 그래픽카드를 이용해 애니메이션을 가속화 한다. state selector > focus-within 선택요소의 element가 focus되어 있다면 이라는 뜻 예시 2. 강의 #7.0 ~ #7.3 Git - branch 관리 [Git Hub Desktop 사용] (명령어는 따로 공부하기로 .. ) 배포할 브랜치 이름 -  코드 수정 & 배포 코드를 수정 하고자 하면…","fields":{"slug":"/html-css/kokoat-clone-3/"},"frontmatter":{"categories":"HTMLCSS","title":"[HTML/CSS] 코코아톡 클론코딩#3","date":"January 27, 2022"}},"next":{"fields":{"slug":"/html-css/kokoat-clone-2/"}},"previous":{"fields":{"slug":"/react-study/react-hooks/"}}},{"node":{"id":"1287c83e-c823-56f0-8886-6f53a7a15573","excerpt":"노마드코더 - 코코아톡 클론코딩 노트 1. 강의 #4.0 ~ #4.6 transition transition은 state(hover, focus 등)가 없는쪽에 써야한다. 예시 ease, cubic-bezier 참조 transform, keyframe-animation MDN 참조 media query 크롬 개발자도구 -toggle divice toolbar 이용하면 모바일 버전도 확인 가능 더 세부적인건 media query mdn 참조 2. 강의 #5.0 ~ #5.3 Git 파일을 계속 추적하며 관리해주는 도구 Git Hub Git의 변경내역을 볼 수 있는 사이트 3. 강의 #6.0 ~ #6.26 BEM - Block Element Modifier CSS 방법론 BEM  따르면서 작성 권유 자세한 내용은 필요 할 때 검색해서 공부! 예시(기본구조) Css Hack [자세한 내용은 검색] 문법에 맞게 작성 했으나 콘텐츠의 글자나 이미지때문에 가운데 정렬이 안된다. 이럴 때 사용 …","fields":{"slug":"/html-css/kokoat-clone-2/"},"frontmatter":{"categories":"HTMLCSS","title":"[HTML/CSS] 코코아톡 클론코딩#2","date":"January 26, 2022"}},"next":{"fields":{"slug":"/html-css/kokoat-clone-1/"}},"previous":{"fields":{"slug":"/html-css/kokoat-clone-3/"}}},{"node":{"id":"8e1a3e02-4246-5e90-9a28-0c82859d5890","excerpt":"노마드코더 - 코코아톡 클론코딩 강의를 듣게된 이유. 사실 이 강의는 듣지 않으려 했었다.. 코딩애플에서도 유료결제해서 기초 HTML, CSS 강의를 들었기 때문에!\r\n리액트 트위터 클론코딩하려는데 트위터 디자인을 보고.. 아 나는 저걸 만드는데 얼마나 걸리고 예쁘게 짤 수 있을까? 라는\r\n생각이 들어 큰 맘 먹고 바로결제.. 할부로 하하 유료인만큼 더 열심히 완전 정복해서 챌린지 까지 도전 해보자! 기초 강의로 대부분 아는 내용으로 빠르게 수강 하였음. 노트 1. 강의 #1.1 ~ #1.9 구글크롬, VS Code, Github Desktop 설치 (그래도.. 개발자이긴하니 다 설치가 되있긴 했다.) 큰 내용 웹 사이트를 만드는 언어 - HTML(content) & CSS(디자인) & Javascript(기능동작) 2. 강의 #2.0 ~ #2.11 폴더명, 파일명은 항상 소문자로 생성 해야한다.  확장 프로그램 설치 Community Material Theme Material I…","fields":{"slug":"/html-css/kokoat-clone-1/"},"frontmatter":{"categories":"HTMLCSS","title":"[HTML/CSS] 코코아톡 클론코딩#1","date":"January 26, 2022"}},"next":{"fields":{"slug":"/react-study/nomad-movie-2/"}},"previous":{"fields":{"slug":"/html-css/kokoat-clone-2/"}}},{"node":{"id":"7972740f-f4d8-506b-9d21-9de0a10d54f1","excerpt":"노마드코더 - ReactJS 영화웹 만들기 CRA로 리액트 프로젝트 생성 노트 1. useEffect 이용한 create, destroy Component가 생성될 때 코드 실행(create) 및 파괴될 때 코드 실행(destroy) 2. API 사용법 ajax & coin API 사용 문제점 로 가져온 데이터가 6000 몇개 쯤? 되는데\r\n데이터를 천개 정도까지 잘라서 입력했을 때 USD-> 선택된 Coin 수량 변경시 잘되는데 2천개정도부터\r\n버벅이는 현상이 나타남. 정확한 원인은 아직 모르겠으나 숫자를 입력했을 때 onchange 이벤트가 계속 발생하여\r\n그 속도가 6천개의 데이터를 그려주는 속도보다 빨라서 버벅이는걸로 예상이됨.\r\n소스참조 예상 해결 방안 페이징을 사용하여 데이터를 나눠서 렌더링 하는 방법. 스크롤위치에 따라 데이터를 나눠서 렌더링 하는 방법. input 입력시 onChange발생하여 setMoney를 실행할 때 setTimeout을 줘서 렌더링 시간에 격차…","fields":{"slug":"/react-study/nomad-movie-2/"},"frontmatter":{"categories":"React","title":"[React] 영화 웹 서비스#2","date":"January 24, 2022"}},"next":{"fields":{"slug":"/react-study/nomad-movie-1/"}},"previous":{"fields":{"slug":"/html-css/kokoat-clone-1/"}}},{"node":{"id":"310a6420-637c-5bb6-81a6-a3d01d1b0930","excerpt":"노마드코더 - ReactJS 영화웹 만들기 0. 기초강의를 다시 듣는 이유? 기초 강의를 들었음에도 다시듣는 이유는 개발을 잘하는사람은 어떻게 개발하나 보기위해 ??\r\n그냥 화면만 나오게하고 기능만 구현했던 나는 원티드 프리온보딩 코스를 지원하고 떨어졌을 때\r\n왜 떨어졌을지 생각 해봤다. 과제는 리액트를 사용하여 원티드 상단과 똑같이 만들라 한것.\r\n만들 당시만해도 잘만들었다 생각했는데.. 떨어지고 다른 사람들의 소스코드를 보니\r\n난 리액트환경안에서 리액트보다 순수 자바스크립트 html 코딩을 하고 있었던것…\r\n그리하여 프론트엔드의 강자 노마드코더 강의로 기초를 다지고자 했는데\r\n강의 30분정도만에 나의 선택을 칭찬한다. 바닐라Js vs ReactJs 차이 바닐라Js는 HTML생성 후 Javascript로 가져와서 HTML을 수정 React JS에서는 Javascript로 시작하여 수정의 필요가있는 HTML을 업데이트 1. 노마드코더 리액트 강의 첫소감 현재 state를 바탕으로 …","fields":{"slug":"/react-study/nomad-movie-1/"},"frontmatter":{"categories":"React","title":"[React] 영화크롬앱#1","date":"January 23, 2022"}},"next":{"fields":{"slug":"/nomadjs-chrome/"}},"previous":{"fields":{"slug":"/react-study/nomad-movie-2/"}}},{"node":{"id":"ca250f11-42c5-5e9e-b8e8-98389f587427","excerpt":"자바스크립트 몰랐던 속성 정리 .. HTMLElement - Web API | MDN 2022-01-21 1. Element.classList 공백으로 구분된 className 요소의 리스트에 접근하는 쉬운 방법. DOMTokenList를 반환, add(), remove(), toggle() 등을 이용해 수정 가능 예시 : 속성 바꾸기 2. padStart, padEnd padStart는 결과 문자열을 ‘targetLenth’ 만큼 시작 부분부터 ‘padString’ 문자로 채운다. padString의 Default 값은 공백문자 padEnd는 끝 부분부터 ‘padString’ 문자로 채운다. 예시: 마스크 넘버 3. 지리, 날씨 정보 얻기 이 메소드는 단말의 현재 위치를 얻는데 사용 된다. 예시 4. 지리정보, 날씨정보 API 사이트 OpenWeatherMap JS 2022-01-21 1. Element.classList 2. padStart, padEnd 3. 지리, 날씨 정보…","fields":{"slug":"/nomadjs-chrome/"},"frontmatter":{"categories":"JS","title":"[JS] Javascript","date":"January 22, 2022"}},"next":{"fields":{"slug":"/vscode/vscode-study-extends/"}},"previous":{"fields":{"slug":"/react-study/nomad-movie-1/"}}},{"node":{"id":"bc3fcd16-f353-5eeb-a9b3-7f3cca62b2f0","excerpt":"VS Code 정리 유용한 확장도구 1. ESLint 2. Prettier 영역 선택 후 다중 선택 VSCode 1. ESLint 2. Prettier","fields":{"slug":"/vscode/vscode-study-extends/"},"frontmatter":{"categories":"VSCode","title":"[VS Code] VS Code 단축키","date":"January 20, 2022"}},"next":{"fields":{"slug":"/vscode/vscode-study-shortcut/"}},"previous":{"fields":{"slug":"/nomadjs-chrome/"}}},{"node":{"id":"3e475cd9-8027-5b28-8681-fb13c4463669","excerpt":"VS Code 정리 단축키 정리 0. 키보드 단축키 모음을 확인 ctrl + k + s 키보드 단축키 설정 파일 오픈 1. ctrl + d 영역 선택 후 다중 선택 예시 public index: number  선택 후 ctrl + d 2. 빈줄 생성 ctrl + shift + enter 행 위에 빈줄 생성 ctrl + enter 행 아래 빈줄 생성 3. 열 선택 alt + 마우스 왼쪽 클릭 해당 라인 커서 생성 영역 선택 alt + shift + i 선택 영역 끝에 커서 생성 alt + shif + 드래그 마우스 드래그로 열 선택 VSCode 0. 키보드 단축키 모음을 확인 1. ctrl + d 2. 빈줄 생성 3. 열 선택","fields":{"slug":"/vscode/vscode-study-shortcut/"},"frontmatter":{"categories":"VSCode","title":"[VS Code] VS Code 단축키","date":"January 20, 2022"}},"next":{"fields":{"slug":"/react-study/react-classnames-lib/"}},"previous":{"fields":{"slug":"/vscode/vscode-study-extends/"}}},{"node":{"id":"75a8b637-b4ee-5f07-8ef4-d79f631309ed","excerpt":"A. React - Life Cycle  1. componentDidMount() 컴포넌트가 만들어지고 첫 렌더링 마친 후 호출되는 함수 setTimeout, setInterval 및 AJAX 처리. B. classnames 서로 다른 효과를 갖고 있는 css를 하나의 컴포넌트에 적용하는데 사용. 1. 설치 2. 사용법 App.css의 스타일을 받아와서 box와 blue 값은 isBlue 값에 따라 보이거나 안보이거나 A. React - Life Cycle 1. componentDidMount() B. classnames 1. 설치 2. 사용법","fields":{"slug":"/react-study/react-classnames-lib/"},"frontmatter":{"categories":"React","title":"[React] React Basic","date":"January 19, 2022"}},"next":{"fields":{"slug":"/algorithm-study/greedy/law-of-Large-Number/"}},"previous":{"fields":{"slug":"/vscode/vscode-study-shortcut/"}}},{"node":{"id":"35f963c6-1b41-5dad-a923-371f4f428665","excerpt":"출처 : 이것이코딩테스트다 큰 수의 법칙 입력 조건 첫째 줄에 N, M, K의 자연수가 주어지며, 각 자연수는 공백으로 구분한다  (2 ≤ N ≤ 1,000, 1 ≤ M ≤ 10,000, 1 ≤ K ≤ 10,000) 둘째 줄에 N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다. 단, 각각의 자연수는 1이상 10,000이하의 수로 주어진다 입력으로 주어지는 K는 항상 M보다 작거나 같다 출력 조건 첫째 줄에 큰 수의 법칙에 따라 더해진 답을 출력한다 입력 예시 출력 예시 노트 가장 큰수, 두 번째 수 선택 (정렬 후 뒤에서 2개 숫자) 가장 큰 수가 더해지는 횟수 구하기 M을 (K + 1)로 나눈 몫이 수열이 반복 되는 횟수  M이 (K + 1)로 나누어 떨어지지 않는 경우 M을 (K + 1)로 나눈 나머지도 가장 큰 수가 더해짐 가장 큰 수가 등장하는 횟수 = (M // (K + 1)) * K  + M % (K + 1) 두번째 큰 수가 등장하는 횟수 = M - 가장 큰 수가…","fields":{"slug":"/algorithm-study/greedy/law-of-Large-Number/"},"frontmatter":{"categories":"알고리즘 그리디","title":"[이것이 코딩 테스트다] '큰 수의 법칙' ","date":"January 19, 2022"}},"next":{"fields":{"slug":"/ts-study/"}},"previous":{"fields":{"slug":"/react-study/react-classnames-lib/"}}},{"node":{"id":"e5201d3c-8880-5373-b01d-7e06c2574a34","excerpt":"타입스크립트 시작 TS Setting 1. 명령어 실행 -> package.json 생성 2. tsconfig.json 파일 생성 TypeScript에게 어떻게 JavaScript로 변환하는지 옵션 설정 3. package.json 수정 4. 유용한 패키지 설치 및 사용 이 패키지는 타입스크립트 파일이 수정되면 컴파일해줌 package.json 및 tsconfig.json 수정 타입스크립트 쓰는 이유? 자바스크립트 소스 sayHi() 함수를 호출할 때 gender란 값이 필수 이거나 age는 숫자만 와야하는데 문자를 넣는 등의 실수를 했을때 자바스크립트에서는 에러가 나지 않지만 타입 스크립트는 이와 같은 실수를 엄격하게 방지해줄수 있다. 타입스크립트 소스 TS 타입스크립트 시작 1. 명령어 실행 -> package.json 생성 2. tsconfig.json 파일 생성 3. package.json 수정 4. 유용한 패키지 설치 및 사용 package.json 및 tsconfig.j…","fields":{"slug":"/ts-study/"},"frontmatter":{"categories":"TS","title":"[TS] Type Script Setting","date":"January 13, 2022"}},"next":{"fields":{"slug":"/react-study/"}},"previous":{"fields":{"slug":"/algorithm-study/greedy/law-of-Large-Number/"}}},{"node":{"id":"680f68dc-d73d-53e8-8f1c-44847679519b","excerpt":"👋 SVG Scalable Vector Graphics - 벡터와 같은 방식의 2차원 그래픽용 XML 형식 이미지가 코드로 표현 된것 리액트에서 svg 사용법 [위코드 X 원티드] 프론트앤드 프리온보딩 선발 과제 진행하며 svg 활용 방법 찾다가.. svg 파일 준비(경로 : /assets/icon/search-icon.svg) svg 컴포넌트화 svg 색, 크기 변경 svg에서 속성 값 width, height, fill등의 바꾸고자 하는 요소 current로 변경 컴포넌트 props로 current부분의 값 전달 👋 SVG 리액트에서 svg 사용법 svg 색, 크기 변경","fields":{"slug":"/react-study/"},"frontmatter":{"categories":"React","title":"[React] React에서 SVG 사용","date":"January 13, 2022"}},"next":{"fields":{"slug":"/algorithm-study/exact-ranking/"}},"previous":{"fields":{"slug":"/ts-study/"}}},{"node":{"id":"3b5098b3-f95b-5c13-8d70-e760b9dc0285","excerpt":"정확한 순위  선생님은 시험을 본 학생 N명의 성적을 분실하고, 성적을 비교한 결과의 일부만 가지고 있다. 학생 N명의 성적은 모두 다른데, 다음은 6명의 학생에 대하여 6번만 성적을 비교한 결과이다. 1번 학생의 성적 < 5번 학생의 성적 3번 학생의 성적 < 4번 학생의 성적 4번 학생의 성적 < 2번 학생의 성적 4번 학생의 성적 < 6번 학생의 성적 5번 학생의 성적 < 2번 학생의 성적 5번 학생의 성적 < 4번 학생의 성적 A번 학생의 성적이 B번 학생보다 낮다면 화살표가 A에서 B를 가리키도록 한다. 학생들의 성적을 비교한 결과가 주어질 때, 성적 순위를 정확히 알 수 있는 학생은 모두 몇명인지 계산하는 프로그램을 작성하라. 입력 첫째 줄에 학생들의 수 N (2 <= N <= 500)과 두 학생의 성적을 비교한 횟수 M(2 <= M <= 10,000)이 주어진다. 다음 M개의 각 줄에는 두 학생의 성적을 비교한 결과를 나타내는 두 양의 정수 A와 B가 주어진다.\r\n이는…","fields":{"slug":"/algorithm-study/exact-ranking/"},"frontmatter":{"categories":"알고리즘 최단경로","title":"[이것이 코딩 테스트다] '정확한 순위' ","date":"January 13, 2022"}},"next":{"fields":{"slug":"/algorithm-study/greedy/greedy-basic/"}},"previous":{"fields":{"slug":"/react-study/"}}},{"node":{"id":"0d623ac5-cf44-5a58-a93b-808f1eecf7e8","excerpt":"1. 그리디 현재 상황에서 지금 당장 좋은 것만 고르는 방법 예제 3-1 거스름돈 거스름돈 500원, 100원, 50원, 10원 무한히 존재 손님에게 거슬러 줘야 할 돈이 N원 -> 거슬러 줘야 할 동전의 최소 개수 N은 항상 10의 배수 출력 첫째 줄에 성적 순위를 정확히 알 수 있는 학생이 몇 명인지 출력한다. 예제입력 1 예제 출력 1 풀이 코드 노트 가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수 형태로 가장 큰 단위의 화폐부터 가장 작은 단위 화폐까지 차례로 확인 하는 작업 수행이 가능 알고리즘 분류 그리디","fields":{"slug":"/algorithm-study/greedy/greedy-basic/"},"frontmatter":{"categories":"알고리즘 그리디","title":"[이것이 코딩 테스트다] '그리디 기본' ","date":"January 13, 2022"}},"next":{"fields":{"slug":"/algorithm-study/shortest-basic/"}},"previous":{"fields":{"slug":"/algorithm-study/exact-ranking/"}}},{"node":{"id":"9b1c5974-a362-5b09-b172-fb21d5817a05","excerpt":"사례 한 지점에서 다른 특정 지점까지 최단 경로 모든 지점에서 다른 모든 지점까지 최단 경로 종류 다익스트라 최단 경로 플로이드 워셜 벨만 포드 다익스트라 최단 경로 알고리즘 그래프에서 여러 개의 노드가 있을 때, 특정 노드에서 출발하여 다른 노드로 가는 각각의 최단 경로를 구해주는 알고리즘 ‘음의 간선’ 이 없을 때 정상적 동작 우선순위 큐 이용 1. 동작 원리 출발 노드 설정 최단 거리 테이블 초기화 방문하지 않은 노드 중에서 최단 거리가 가장 짧은 노드를 선택 해당 노드를 거쳐 다른 노드로 가는 비용을 계산하여 최단 거리 테이블 갱신  과  번 반복 2. 코드 플로이드 워셜 알고리즘 모든 지점에서 다른 모든 지점까지의 최단 경로를 모두 구해야 하는 경우 사용 1. 점화식 Dab = min(Dab, Dak + Dkb) 2. 코드 알고리즘 분류 최단경로 사례 종류 다익스트라 최단 경로 알고리즘 1. 동작 원리 2. 코드 플로이드 워셜 알고리즘 1. 점화식 2. 코드","fields":{"slug":"/algorithm-study/shortest-basic/"},"frontmatter":{"categories":"알고리즘 최단경로","title":"[이것이 코딩 테스트다] '최단경로' 알고리즘","date":"January 11, 2022"}},"next":{"fields":{"slug":"/algorithm-study/future-city/"}},"previous":{"fields":{"slug":"/algorithm-study/greedy/greedy-basic/"}}},{"node":{"id":"965d6b7a-461d-59d4-aef8-77de9136dcdb","excerpt":"정수삼각형 백준 - 문제 링크 위 그림은 크기가 5인 정수 삼각형의 한 모습이다. 맨 위층 7부터 시작해서 아래에 있는 수 중 하나를 선택하여 아래층으로 내려올 때, 이제까지 선택된 수의 합이 최대가 되는 경로를 구하는 프로그램을 작성하라. 아래층에 있는 수는 현재 층에서 선택된 수의 대각선 왼쪽 또는 대각선 오른쪽에 있는 것 중에서만 선택할 수 있다. 삼각형의 크기는 1 이상 500 이하이다. 삼각형을 이루고 있는 각 수는 모두 정수이며, 범위는 0 이상 9999 이하이다. 입력 첫째 줄에 삼각형의 크기 n(1 ≤ n ≤ 500)이 주어지고, 둘째 줄부터 n+1번째 줄까지 정수 삼각형이 주어진다. 출력 아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 예제입력 1 예제 출력 1 접근 N범위 100이하 -> 최단거리 플로이…","fields":{"slug":"/algorithm-study/future-city/"},"frontmatter":{"categories":"알고리즘 다이나믹프로그래밍","title":"[백준 알고리즘] '정수삼각형' 알고리즘","date":"January 11, 2022"}},"next":{"fields":{"slug":"/algorithm-study/integer-triangle/"}},"previous":{"fields":{"slug":"/algorithm-study/shortest-basic/"}}},{"node":{"id":"64901a42-3713-5e30-b45f-69e8be3aeb70","excerpt":"정수삼각형 백준 - 문제 링크 위 그림은 크기가 5인 정수 삼각형의 한 모습이다. 맨 위층 7부터 시작해서 아래에 있는 수 중 하나를 선택하여 아래층으로 내려올 때, 이제까지 선택된 수의 합이 최대가 되는 경로를 구하는 프로그램을 작성하라. 아래층에 있는 수는 현재 층에서 선택된 수의 대각선 왼쪽 또는 대각선 오른쪽에 있는 것 중에서만 선택할 수 있다. 삼각형의 크기는 1 이상 500 이하이다. 삼각형을 이루고 있는 각 수는 모두 정수이며, 범위는 0 이상 9999 이하이다. 입력 첫째 줄에 삼각형의 크기 n(1 ≤ n ≤ 500)이 주어지고, 둘째 줄부터 n+1번째 줄까지 정수 삼각형이 주어진다. 출력 아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 예제입력 1 예제 출력 1 접근 dp문제 -> 점화식 이전 행의 왼쪽 …","fields":{"slug":"/algorithm-study/integer-triangle/"},"frontmatter":{"categories":"알고리즘 다이나믹프로그래밍","title":"[백준 알고리즘] '정수삼각형' 알고리즘","date":"January 11, 2022"}},"next":{"fields":{"slug":"/git-study/2022-01-07-git-basic/"}},"previous":{"fields":{"slug":"/algorithm-study/future-city/"}}},{"node":{"id":"1a7d6107-2eb7-5a75-b8e1-864293a8c782","excerpt":"github 디렉토리 아래 실행 1. 초기화 2. 원격 저장소 설정 3. gitgub 업로드 4. error 발생 -원인 : 충돌로 인해 푸쉬 불가? 실행시 push 성공. 5. git pull 원격저장소에 있는 프로젝트의 변경사항을 로컬저장소에 옮겨와 자동으로 병합","fields":{"slug":"/git-study/2022-01-07-git-basic/"},"frontmatter":{"categories":"Git","title":"[Git] Git Study","date":"January 06, 2022"}},"next":{"fields":{"slug":"/gatsby-github-blog/"}},"previous":{"fields":{"slug":"/algorithm-study/integer-triangle/"}}},{"node":{"id":"f03b243b-bf74-5e27-b3fa-ace0cdd4842f","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","fields":{"slug":"/gatsby-github-blog/"},"frontmatter":{"categories":"블로그 featured","title":"Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"}},"next":null,"previous":{"fields":{"slug":"/git-study/2022-01-07-git-basic/"}}}],"categories":["All","React","HTMLCSS","JS","VSCode","알고리즘","그리디","TS","최단경로","다이나믹프로그래밍","Git","블로그","featured"]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}