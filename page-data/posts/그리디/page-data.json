{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/그리디",
    "result": {"pageContext":{"currentCategory":"그리디","categories":["All","onboarding","JS","React","Git","HTMLCSS","VSCode","알고리즘","그리디","TS","최단경로","다이나믹프로그래밍","블로그","featured"],"edges":[{"node":{"id":"35f963c6-1b41-5dad-a923-371f4f428665","excerpt":"출처 : 이것이코딩테스트다 큰 수의 법칙 입력 조건 첫째 줄에 N, M, K의 자연수가 주어지며, 각 자연수는 공백으로 구분한다  (2 ≤ N ≤ 1,000, 1 ≤ M ≤ 10,000, 1 ≤ K ≤ 10,000) 둘째 줄에 N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다. 단, 각각의 자연수는 1이상 10,000이하의 수로 주어진다 입력으로 주어지는 K는 항상 M보다 작거나 같다 출력 조건 첫째 줄에 큰 수의 법칙에 따라 더해진 답을 출력한다 입력 예시 출력 예시 노트 가장 큰수, 두 번째 수 선택 (정렬 후 뒤에서 2개 숫자) 가장 큰 수가 더해지는 횟수 구하기 M을 (K + 1)로 나눈 몫이 수열이 반복 되는 횟수  M이 (K + 1)로 나누어 떨어지지 않는 경우 M을 (K + 1)로 나눈 나머지도 가장 큰 수가 더해짐 가장 큰 수가 등장하는 횟수 = (M // (K + 1)) * K  + M % (K + 1) 두번째 큰 수가 등장하는 횟수 = M - 가장 큰 수가…","fields":{"slug":"/algorithm-study/greedy/law-of-Large-Number/"},"frontmatter":{"categories":"알고리즘 그리디","title":"[이것이 코딩 테스트다] '큰 수의 법칙' ","date":"January 19, 2022"}},"next":{"fields":{"slug":"/ts-study/"}},"previous":{"fields":{"slug":"/react-study/react-classnames-lib/"}}},{"node":{"id":"0d623ac5-cf44-5a58-a93b-808f1eecf7e8","excerpt":"1. 그리디 현재 상황에서 지금 당장 좋은 것만 고르는 방법 예제 3-1 거스름돈 거스름돈 500원, 100원, 50원, 10원 무한히 존재 손님에게 거슬러 줘야 할 돈이 N원 -> 거슬러 줘야 할 동전의 최소 개수 N은 항상 10의 배수 출력 첫째 줄에 성적 순위를 정확히 알 수 있는 학생이 몇 명인지 출력한다. 예제입력 1 예제 출력 1 풀이 코드 노트 가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수 형태로 가장 큰 단위의 화폐부터 가장 작은 단위 화폐까지 차례로 확인 하는 작업 수행이 가능 알고리즘 분류 그리디","fields":{"slug":"/algorithm-study/greedy/greedy-basic/"},"frontmatter":{"categories":"알고리즘 그리디","title":"[이것이 코딩 테스트다] '그리디 기본' ","date":"January 13, 2022"}},"next":{"fields":{"slug":"/algorithm-study/shortest-basic/"}},"previous":{"fields":{"slug":"/algorithm-study/exact-ranking/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}