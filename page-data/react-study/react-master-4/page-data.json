{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/react-study/react-master-4/",
    "result": {"data":{"cur":{"id":"20577b9d-9a80-5f9d-9a67-b2f5de908660","html":"<h1 id=\"노마드코더---react-js-마스터클래스\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%A7%88%EB%93%9C%EC%BD%94%EB%8D%94---react-js-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"노마드코더   react js 마스터클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://nomadcoders.co/react-masterclass\">노마드코더 - React JS 마스터클래스</a></h1>\n<h2 id=\"1-recoil-selector\" style=\"position:relative;\"><a href=\"#1-recoil-selector\" aria-label=\"1 recoil selector permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Recoil selector</h2>\n<ul>\n<li><code class=\"language-text\">selector</code>는 state자체를 바꾸지 않고 원하는 방식으로 atom의 output을 변형시키는 도구</li>\n</ul>\n<blockquote>\n<p>예시</p>\n</blockquote>\n<ul>\n<li>하나의 atom으로 selector를 이용하여 category별로 데이터를 보여주는 예시</li>\n</ul>\n<ul>\n<li>atom.ts</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IToDo</span> <span class=\"token punctuation\">{</span>\r\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\r\n  text<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\r\n  category<span class=\"token operator\">:</span> <span class=\"token string\">\"TO_DO\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"DOING\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"DONE\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> toDoState <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">atom</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>IToDo<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  key<span class=\"token operator\">:</span> <span class=\"token string\">\"toDo\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// selector</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> toDoSelector <span class=\"token operator\">=</span> <span class=\"token function\">selector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  key<span class=\"token operator\">:</span> <span class=\"token string\">\"toDoSelector\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> get <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> toDos <span class=\"token operator\">=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>toDoState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\r\n      toDos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>toDo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>category <span class=\"token operator\">===</span> <span class=\"token string\">\"TO_DO\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n      toDos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>toDo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>category <span class=\"token operator\">===</span> <span class=\"token string\">\"DOING\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n      toDos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>toDo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> toDo<span class=\"token punctuation\">.</span>category <span class=\"token operator\">===</span> <span class=\"token string\">\"DONE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>ToDoList.tsx</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ToDoList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// const toDos = useRecoilValue(toDoState);</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>toDo<span class=\"token punctuation\">,</span> doing<span class=\"token punctuation\">,</span> done<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useRecoilValue</span><span class=\"token punctuation\">(</span>toDoSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token operator\">...</span>\r\n  <span class=\"token comment\">//toDo</span>\r\n  <span class=\"token punctuation\">{</span>toDo<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>toDo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>ToDo key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toDo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>toDo<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"selector-get-set\" style=\"position:relative;\"><a href=\"#selector-get-set\" aria-label=\"selector get set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>selector get, set</h4>\n<ul>\n<li>위에서 get은 다뤘으나 set은 다루지 않아 추가적인 예시 이다. 이 예시는 <code class=\"language-text\">minutes</code> atom으로 selector의 get을 이용해 <code class=\"language-text\">hours</code>를 표현하고 set을 이용해 <code class=\"language-text\">hours</code>를 <code class=\"language-text\">minutes</code>로 나타내는 예시이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> minutesState <span class=\"token operator\">=</span> <span class=\"token function\">atom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  key<span class=\"token operator\">:</span> <span class=\"token string\">\"minutes\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> hoursSelector <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">selector</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  key<span class=\"token operator\">:</span> <span class=\"token string\">\"hours\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> get <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>minutesState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> minutes <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> set <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>minutesState<span class=\"token punctuation\">,</span> minutes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>minutes<span class=\"token punctuation\">,</span> setMinutes<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useRecoilState</span><span class=\"token punctuation\">(</span>minutesState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>hours<span class=\"token punctuation\">,</span> setHours<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useRecoilState</span><span class=\"token punctuation\">(</span>hoursSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onMinutesChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FormEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">setMinutes</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span>event<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onHoursChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>FormEvent<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">setHours</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span>event<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>minutes<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onMinutesChange<span class=\"token punctuation\">}</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Minutes\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>hours<span class=\"token punctuation\">}</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onHoursChange<span class=\"token punctuation\">}</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Hours\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li><a href=\"/posts/React\">React</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-recoil-selector\">1. Recoil selector</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#selector-get-set\">selector get, set</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"노마드코더 - React JS 마스터클래스 1. Recoil selector 는 state자체를 바꾸지 않고 원하는 방식으로 atom의 output을 변형시키는 도구 예시 하나의 atom으로 selector를 이용하여 category별로 데이터를 보여주는 예시 atom.ts ToDoList.tsx selector get, set 위에서 get은 다뤘으나 set은 다루지 않아 추가적인 예시 이다. 이 예시는  atom으로 selector의 get을 이용해 를 표현하고 set을 이용해 를 로 나타내는 예시이다. React 1. Recoil selector selector get, set","frontmatter":{"date":"February 02, 2022","title":"[React] React JS 마스터클래스#4","categories":"React","author":"정굥","emoji":"🧢"},"fields":{"slug":"/react-study/react-master-4/"}},"next":{"id":"e304f760-7ee0-5390-9261-669198b251ec","html":"<h1 id=\"노마드코더---react-js-마스터클래스\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%A7%88%EB%93%9C%EC%BD%94%EB%8D%94---react-js-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"노마드코더   react js 마스터클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://nomadcoders.co/react-masterclass\">노마드코더 - React JS 마스터클래스</a></h1>\n<h2 id=\"1-section-5-state-management---recoil\" style=\"position:relative;\"><a href=\"#1-section-5-state-management---recoil\" aria-label=\"1 section 5 state management   recoil permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Section 5. State Management - Recoil</h2>\n<ul>\n<li>global state - 어플리케이션 전체에서 공유되는 state (ex. user login)</li>\n</ul>\n<ul>\n<li>Atom은 상태(state)의 일부를 나타낸다. Atoms는 어떤 컴포넌트에서나 읽고 쓸 수 있다.</li>\n<li>Redux 와 Recoil 차이점 공부해두면 좋을 듯.</li>\n<li>컴포넌트가 atom의 값을 관찰 하기 시작할 때 atom이 변경되면 컴포넌트도 변경된 값으로 다시 리렌더링 된다.</li>\n<li>예시같은건 문서 확인 <a href=\"https://recoiljs.org/ko/\">Recoil</a></li>\n</ul>\n<h3 id=\"apexchart-이용\" style=\"position:relative;\"><a href=\"#apexchart-%EC%9D%B4%EC%9A%A9\" aria-label=\"apexchart 이용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://apexcharts.com/docs/react-charts/\">ApexChart 이용</a></h3>\n<h2 id=\"react-hook-form\" style=\"position:relative;\"><a href=\"#react-hook-form\" aria-label=\"react hook form permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Hook Form</h2>\n<ul>\n<li>useForm 호출하여 register와 handleSubmit 을 받아 register 함수를 form에 있는 모든 input에서 호출 validation 설정은</li>\n</ul>\n<p>예를 들어 required:true or required:“error message” 와 같이 작성\r\n자세한 내용은 github source 또는 <a href=\"https://react-hook-form.com/\"><code class=\"language-text\">react-form-hook</code></a> 확인</p>\n<br/>\n<ul>\n<li><a href=\"/posts/React\">React</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-section-5-state-management---recoil\">1. Section 5. State Management - Recoil</a></p>\n<ul>\n<li><a href=\"#apexchart-%EC%9D%B4%EC%9A%A9\">ApexChart 이용</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#react-hook-form\">React Hook Form</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"February 01, 2022","title":"[React] React JS 마스터클래스#3","categories":"React","author":"정굥","emoji":"🧢"},"fields":{"slug":"/react-study/react-master-3/"}},"prev":{"id":"5b5951c5-de4a-583f-b9bc-f5229db43daf","html":"<h1 id=\"노마드코더---react-js-마스터클래스\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%A7%88%EB%93%9C%EC%BD%94%EB%8D%94---react-js-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"노마드코더   react js 마스터클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://nomadcoders.co/react-masterclass\">노마드코더 - React JS 마스터클래스</a></h1>\n<h2 id=\"1-react-beautiful-dnd\" style=\"position:relative;\"><a href=\"#1-react-beautiful-dnd\" aria-label=\"1 react beautiful dnd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. <a href=\"https://github.com/atlassian/react-beautiful-dnd/tree/master/docs/api\">react-beautiful-dnd</a></h2>\n<ul>\n<li>DRAG &#x26; DROP 구현 쉽게 해주는 lib</li>\n<li>Draggable에서 key와 draggableId는 같은 값이어야 한다.</li>\n<li>Droppable, Board, DragDropContext등 부모 State가 바뀌면 자식들은 모두 다시 렌더링 된다. React의 기본 특성 이로 인해 Draggable할 때 하나의 요소만 움직여도 다른 자식들도 모두 렌더링 된다.</li>\n</ul>\n<p>이를 방지하기 위해 memo를 사용\r\n<code class=\"language-text\">react memo</code>는 prop이 바뀌지 않는다면 컴포넌트 렌더링을 막아준다.</p>\n<blockquote>\n<p>예시</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">DraggableCard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> toDo<span class=\"token punctuation\">,</span> idx <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> IDraggableCardProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token operator\">...</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token comment\">// prop이 바뀌지 않았다면 DraggableCard는 다시 렌더링 되지 않는다.</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span>DraggableCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>&#x3C;br/ ></p>\n<blockquote>\n<p>styled-component props 받는 예시(typescript)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> Area <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> isToggle<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n  background-color:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token parameter\">props</span><span class=\"token operator\">=></span>props<span class=\"token punctuation\">.</span>isToggle <span class=\"token operator\">?</span> <span class=\"token string\">\"white\"</span> <span class=\"token operator\">:</span><span class=\"token string\">\"black\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\r\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<br/>\n<h2 id=\"2-reference\" style=\"position:relative;\"><a href=\"#2-reference\" aria-label=\"2 reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Reference</h2>\n<ul>\n<li>React코드를 이용해 HTML 요소를 지정하고, 가져올 수 있는 방법</li>\n</ul>\n<p>리액트 실전형 Hooks 10개 공부 중 useClick Hook 배울 때 배웠다.\r\n<a href=\"/react-study/react-hooks-2/#22-useclick\"><code class=\"language-text\">링크</code></a></p>\n<br/>\n<ul>\n<li><a href=\"/posts/React\">React</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-react-beautiful-dnd\">1. react-beautiful-dnd</a></li>\n<li><a href=\"#2-reference\">2. Reference</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 05, 2022","title":"[React] React JS 마스터클래스#5","categories":"React","author":"정굥","emoji":"🧢"},"fields":{"slug":"/react-study/react-master-5/"}},"site":{"siteMetadata":{"siteUrl":"https://wjdrbdyd.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/react-study/react-master-4/","nextSlug":"/react-study/react-master-3/","prevSlug":"/react-study/react-master-5/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}