{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/react-study/react-master-6/",
    "result": {"data":{"cur":{"id":"cdfa6853-85f9-5f4e-81a9-6a1d982b0b0b","html":"<h1 id=\"노마드코더---react-js-마스터클래스\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%A7%88%EB%93%9C%EC%BD%94%EB%8D%94---react-js-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"노마드코더   react js 마스터클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://nomadcoders.co/react-masterclass\">노마드코더 - React JS 마스터클래스</a></h1>\n<h2 id=\"1-framer-motion\" style=\"position:relative;\"><a href=\"#1-framer-motion\" aria-label=\"1 framer motion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. <a href=\"https://www.framer.com/motion/\">Framer Motion</a></h2>\n<ul>\n<li>Animation Section에서 <code class=\"language-text\">framer-motion</code> library 사용은 기록 보다 document를 보는 것이 좋은듯 하다.</li>\n</ul>\n<blockquote>\n<p>Slider는 혹시 몰라 아래 코드 첨부</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> boxVar <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function-variable function\">entry</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">isBack<span class=\"token operator\">:</span> boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n    x<span class=\"token operator\">:</span> isBack <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">500</span> <span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\r\n    opacity<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\r\n    scale<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n  center<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> opacity<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> scale<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> transition<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> duration<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token function-variable function\">exit</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">isBack<span class=\"token operator\">:</span> boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n    x<span class=\"token operator\">:</span> isBack <span class=\"token operator\">?</span> <span class=\"token number\">500</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\r\n    opacity<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\r\n    scale<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\r\n    rotateX<span class=\"token operator\">:</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span>\r\n    transition<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> duration<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>visible<span class=\"token punctuation\">,</span> setVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>back<span class=\"token punctuation\">,</span> setBack<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">nextPlease</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">setBack</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>prev <span class=\"token operator\">===</span> <span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> prev <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">prevPlease</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">setBack</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>prev <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token number\">10</span> <span class=\"token operator\">:</span> prev <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>Wrapper<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>AnimatePresence custom<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>back<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>Box\r\n          custom<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>back<span class=\"token punctuation\">}</span>\r\n          variants<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>boxVar<span class=\"token punctuation\">}</span>\r\n          initial<span class=\"token operator\">=</span><span class=\"token string\">\"entry\"</span>\r\n          animate<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span>\r\n          exit<span class=\"token operator\">=</span><span class=\"token string\">\"exit\"</span>\r\n          key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>visible<span class=\"token punctuation\">}</span>\r\n        <span class=\"token operator\">></span>\r\n          <span class=\"token punctuation\">{</span>visible<span class=\"token punctuation\">}</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Box<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AnimatePresence<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>prevPlease<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>prev<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>nextPlease<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>next<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Wrapper<span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"section8-nomflix-clone\" style=\"position:relative;\"><a href=\"#section8-nomflix-clone\" aria-label=\"section8 nomflix clone permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Section8. NOMFLIX CLONE</h2>\n<ul>\n<li>svg태그에서 <code class=\"language-text\">fill</code> 속성은 색상 변경 svg > path 태그에서 <code class=\"language-text\">stroke</code>는 선 색상 <code class=\"language-text\">stroke-width</code>는 선 두께</li>\n<li><a href=\"/react-study/react-master-2/react-query\"><code class=\"language-text\">리액트쿼리</code></a></li>\n</ul>\n<h3 id=\"리액트-쿼리-이용해-데이터-가져오기\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BF%BC%EB%A6%AC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"리액트 쿼리 이용해 데이터 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트 쿼리 이용해 데이터 가져오기</h3>\n<ol>\n<li>쿼리 클라이언트 생성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> QueryClient<span class=\"token punctuation\">,</span> QueryClientProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-query\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token operator\">&lt;</span>QueryClientProvider client<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>client<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">...</span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>QueryClientProvider<span class=\"token operator\">></span>\r\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li><a href=\"https://www.themoviedb.org/\">TMDB</a> 회원가입</li>\n</ol>\n<blockquote>\n<p>API KEY 발급</p>\n</blockquote>\n<ol start=\"3\">\n<li>이후 내용은 git hub로</li>\n</ol>\n<br/>\n<ul>\n<li><a href=\"/posts/React\">React</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-framer-motion\">1. Framer Motion</a></p>\n</li>\n<li>\n<p><a href=\"#section8-nomflix-clone\">Section8. NOMFLIX CLONE</a></p>\n<ul>\n<li><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BF%BC%EB%A6%AC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\">리액트 쿼리 이용해 데이터 가져오기</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"노마드코더 - React JS 마스터클래스 1. Framer Motion Animation Section에서  library 사용은 기록 보다 document를 보는 것이 좋은듯 하다. Slider는 혹시 몰라 아래 코드 첨부 Section8. NOMFLIX CLONE svg태그에서  속성은 색상 변경 svg > path 태그에서 는 선 색상 는 선 두께  리액트 쿼리 이용해 데이터 가져오기 쿼리 클라이언트 생성 TMDB 회원가입 API KEY 발급 이후 내용은 git hub로 React 1. Framer Motion Section8. NOMFLIX CLONE 리액트 쿼리 이용해 데이터 가져오기","frontmatter":{"date":"February 08, 2022","title":"[React] React JS 마스터클래스#6","categories":"React","author":"정굥","emoji":"🧢"},"fields":{"slug":"/react-study/react-master-6/"}},"next":{"id":"5b5951c5-de4a-583f-b9bc-f5229db43daf","html":"<h1 id=\"노마드코더---react-js-마스터클래스\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%A7%88%EB%93%9C%EC%BD%94%EB%8D%94---react-js-%EB%A7%88%EC%8A%A4%ED%84%B0%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"노마드코더   react js 마스터클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://nomadcoders.co/react-masterclass\">노마드코더 - React JS 마스터클래스</a></h1>\n<h2 id=\"1-react-beautiful-dnd\" style=\"position:relative;\"><a href=\"#1-react-beautiful-dnd\" aria-label=\"1 react beautiful dnd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. <a href=\"https://github.com/atlassian/react-beautiful-dnd/tree/master/docs/api\">react-beautiful-dnd</a></h2>\n<ul>\n<li>DRAG &#x26; DROP 구현 쉽게 해주는 lib</li>\n<li>Draggable에서 key와 draggableId는 같은 값이어야 한다.</li>\n<li>Droppable, Board, DragDropContext등 부모 State가 바뀌면 자식들은 모두 다시 렌더링 된다. React의 기본 특성 이로 인해 Draggable할 때 하나의 요소만 움직여도 다른 자식들도 모두 렌더링 된다.</li>\n</ul>\n<p>이를 방지하기 위해 memo를 사용\r\n<code class=\"language-text\">react memo</code>는 prop이 바뀌지 않는다면 컴포넌트 렌더링을 막아준다.</p>\n<blockquote>\n<p>예시</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">DraggableCard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> toDo<span class=\"token punctuation\">,</span> idx <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> IDraggableCardProps<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token operator\">...</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token comment\">// prop이 바뀌지 않았다면 DraggableCard는 다시 렌더링 되지 않는다.</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span>DraggableCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>&#x3C;br/ ></p>\n<blockquote>\n<p>styled-component props 받는 예시(typescript)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> Area <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> isToggle<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n  background-color:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token parameter\">props</span><span class=\"token operator\">=></span>props<span class=\"token punctuation\">.</span>isToggle <span class=\"token operator\">?</span> <span class=\"token string\">\"white\"</span> <span class=\"token operator\">:</span><span class=\"token string\">\"black\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\r\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<br/>\n<h2 id=\"2-reference\" style=\"position:relative;\"><a href=\"#2-reference\" aria-label=\"2 reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Reference</h2>\n<ul>\n<li>React코드를 이용해 HTML 요소를 지정하고, 가져올 수 있는 방법</li>\n</ul>\n<p>리액트 실전형 Hooks 10개 공부 중 useClick Hook 배울 때 배웠다.\r\n<a href=\"/react-study/react-hooks-2/#22-useclick\"><code class=\"language-text\">링크</code></a></p>\n<br/>\n<ul>\n<li><a href=\"/posts/React\">React</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-react-beautiful-dnd\">1. react-beautiful-dnd</a></li>\n<li><a href=\"#2-reference\">2. Reference</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 05, 2022","title":"[React] React JS 마스터클래스#5","categories":"React","author":"정굥","emoji":"🧢"},"fields":{"slug":"/react-study/react-master-5/"}},"prev":{"id":"5d8704f3-1a88-5907-912a-93c7134340f1","html":"<h2 id=\"by-mdn\" style=\"position:relative;\"><a href=\"#by-mdn\" aria-label=\"by mdn permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">by MDN</a></h2>\n<h1 id=\"구조-분해-할당\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0-%EB%B6%84%ED%95%B4-%ED%95%A0%EB%8B%B9\" aria-label=\"구조 분해 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조 분해 할당</h1>\n<ul>\n<li>구조 분해 할당 구문은 배열이나 객체의 속성을 해제하여 그 값을 개별 변수에 담을 수 있게 하는 Javascript 표현식</li>\n</ul>\n<h2 id=\"새로운-변수-이름으로-할당하기\" style=\"position:relative;\"><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%B3%80%EC%88%98-%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%ED%95%A0%EB%8B%B9%ED%95%98%EA%B8%B0\" aria-label=\"새로운 변수 이름으로 할당하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새로운 변수 이름으로 할당하기</h2>\n<ul>\n<li>같은 구조를 가진 다른 데이터 가져올 때 변수명이 겹쳐서 새로운 변수명 할당이 필요 했다.</li>\n</ul>\n<blockquote>\n<p>예시</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> movieData<span class=\"token punctuation\">,</span> isLoading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> useQuery<span class=\"token operator\">&lt;</span>IGetMoviesResult<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"movies\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"nowPlaying\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n    getMovies\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> tvData<span class=\"token punctuation\">,</span> isLoading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> useQuery<span class=\"token operator\">&lt;</span>IGetPopTvResult<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"tv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"popular\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n    getPopTv\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\r\n- [React](/posts/React)\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#by-mdn\">by MDN</a></li>\n<li><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%B3%80%EC%88%98-%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%ED%95%A0%EB%8B%B9%ED%95%98%EA%B8%B0\">새로운 변수 이름으로 할당하기</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 09, 2022","title":"[JS] 구조분해할당시 변수 이름 변경","categories":"React","author":"정굥","emoji":"🧢"},"fields":{"slug":"/react-study/my-study-1/"}},"site":{"siteMetadata":{"siteUrl":"https://wjdrbdyd.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/react-study/react-master-6/","nextSlug":"/react-study/react-master-5/","prevSlug":"/react-study/my-study-1/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}